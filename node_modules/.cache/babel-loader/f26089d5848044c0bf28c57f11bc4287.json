{"ast":null,"code":"var track=document.querySelector('.carousel__track');var slides=Array.from(track.children);var nextButton=document.querySelector('.carousel__button--right');var prevButton=document.querySelector('.carousel__button--left');var dotsNav=document.querySelector('.carousel__nav');var dots=Array.from(dotsNav.children);var slideWidth=slides[0].getBoundingClientRect().width;//---ALWAYS-----------------------------------------------------\n//Arrange the slides next to one another\nvar setSlidePosition=function setSlidePosition(slide,index){slide.style.left=slideWidth*index+'px';};slides.forEach(setSlidePosition);//Same as...\n// slides[0].style.left = slideWidth * 0 + \"px\";\n// slides[1].style.left = slideWidth * 1 + \"px\";...\n//^--ALWAYS-----------------------------------------------------\n//ftn change CSS to move slides\nvar moveToSlide=function moveToSlide(track,currentSlide,targetSlide){track.style.transform='translateX(-'+targetSlide.style.left+')';currentSlide.classList.remove('current-slide');targetSlide.classList.add('current-slide');};//ftn change CSS on dots to show current slide\nvar updateDots=function updateDots(currentDot,targetDot){currentDot.classList.remove('current-slide');targetDot.classList.add('current-slide');};//ftn show which buttons to have active\nvar hideShowArrows=function hideShowArrows(slides,targetIndex,prevButton,nextButton){if(targetIndex===0){prevButton.classList.add('is-hidden');nextButton.classList.remove('is-hidden');}else if(targetIndex===slides.length-1){prevButton.classList.remove('is-hidden');nextButton.classList.add('is-hidden');}else{prevButton.classList.remove('is-hidden');nextButton.classList.remove('is-hidden');}};//When I click left, move slides to the left\nprevButton.addEventListener('click',function(e){var currentSlide=track.querySelector('.current-slide');var prevSlide=currentSlide.previousElementSibling;var currentDot=dotsNav.querySelector('.current-slide');var prevDot=currentDot.previousElementSibling;var targetIndex=slides.findIndex(function(slide){return slide===prevSlide;});//Move to next slide\nmoveToSlide(track,currentSlide,prevSlide);//Show which dot is now current\nupdateDots(currentDot,prevDot);//Make scrolling buttons invisible when necessary\nhideShowArrows(slides,targetIndex,prevButton,nextButton);});//When I click right, move slides to the right\nnextButton.addEventListener('click',function(e){var currentSlide=track.querySelector('.current-slide');var nextSlide=currentSlide.nextElementSibling;var currentDot=dotsNav.querySelector('.current-slide');var nextDot=currentDot.nextElementSibling;var targetIndex=slides.findIndex(function(slide){return slide===nextSlide;});//Move to the next slide\nmoveToSlide(track,currentSlide,nextSlide);//Show which dot is now current\nupdateDots(currentDot,nextDot);//Make scrolling buttons invisible when necessary\nhideShowArrows(slides,targetIndex,prevButton,nextButton);});//When I click the nav indicators, move to that slide\ndotsNav.addEventListener('click',function(e){//What indicator was clicked on?\nvar targetDot=e.target.closest('button');//Stop running if we don't need anything to happen\nif(!targetDot)return;//targetDot = null if click anywhere in dotsNav besides on dots\nvar currentSlide=track.querySelector('.current-slide');var currentDot=dotsNav.querySelector('.current-slide');var targetIndex=dots.findIndex(function(dot){return dot===targetDot;});var targetSlide=slides[targetIndex];//Move to target slide\nmoveToSlide(track,currentSlide,targetSlide);//Show which dot is now current\nupdateDots(currentDot,targetDot);//Make scrolling buttons invisible when necessary\nhideShowArrows(slides,targetIndex,prevButton,nextButton);});","map":{"version":3,"sources":["/Users/ebarw/Documents/job_stuff/portfolio/eb-portfolio/src/components/projects/Projects.js"],"names":["track","document","querySelector","slides","Array","from","children","nextButton","prevButton","dotsNav","dots","slideWidth","getBoundingClientRect","width","setSlidePosition","slide","index","style","left","forEach","moveToSlide","currentSlide","targetSlide","transform","classList","remove","add","updateDots","currentDot","targetDot","hideShowArrows","targetIndex","length","addEventListener","e","prevSlide","previousElementSibling","prevDot","findIndex","nextSlide","nextElementSibling","nextDot","target","closest","dot"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAd,CACA,GAAMC,CAAAA,MAAM,CAAGC,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACM,QAAjB,CAAf,CACA,GAAMC,CAAAA,UAAU,CAAGN,QAAQ,CAACC,aAAT,CAAuB,0BAAvB,CAAnB,CACA,GAAMM,CAAAA,UAAU,CAAGP,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,CAAnB,CACA,GAAMO,CAAAA,OAAO,CAAGR,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAhB,CACA,GAAMQ,CAAAA,IAAI,CAAGN,KAAK,CAACC,IAAN,CAAWI,OAAO,CAACH,QAAnB,CAAb,CAEA,GAAMK,CAAAA,UAAU,CAAGR,MAAM,CAAC,CAAD,CAAN,CAAUS,qBAAV,GAAkCC,KAArD,CAEA;AACA;AACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACzCD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAmBP,UAAU,CAAGK,KAAb,CAAqB,IAAxC,CACD,CAFD,CAGAb,MAAM,CAACgB,OAAP,CAAeL,gBAAf,EACA;AACA;AACA;AACA;AAGA;AACA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACpB,KAAD,CAAQqB,YAAR,CAAsBC,WAAtB,CAAsC,CACxDtB,KAAK,CAACiB,KAAN,CAAYM,SAAZ,CAAwB,eAAiBD,WAAW,CAACL,KAAZ,CAAkBC,IAAnC,CAA0C,GAAlE,CACAG,YAAY,CAACG,SAAb,CAAuBC,MAAvB,CAA8B,eAA9B,EACAH,WAAW,CAACE,SAAZ,CAAsBE,GAAtB,CAA0B,eAA1B,EACD,CAJD,CAKA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAaC,SAAb,CAA2B,CAC5CD,UAAU,CAACJ,SAAX,CAAqBC,MAArB,CAA4B,eAA5B,EACAI,SAAS,CAACL,SAAV,CAAoBE,GAApB,CAAwB,eAAxB,EACD,CAHD,CAKA;AACA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC3B,MAAD,CAAS4B,WAAT,CAAsBvB,UAAtB,CAAkCD,UAAlC,CAAiD,CACtE,GAAIwB,WAAW,GAAK,CAApB,CAAuB,CACrBvB,UAAU,CAACgB,SAAX,CAAqBE,GAArB,CAAyB,WAAzB,EACAnB,UAAU,CAACiB,SAAX,CAAqBC,MAArB,CAA4B,WAA5B,EACD,CAHD,IAGO,IAAIM,WAAW,GAAK5B,MAAM,CAAC6B,MAAP,CAAgB,CAApC,CAAuC,CAC5CxB,UAAU,CAACgB,SAAX,CAAqBC,MAArB,CAA4B,WAA5B,EACAlB,UAAU,CAACiB,SAAX,CAAqBE,GAArB,CAAyB,WAAzB,EACD,CAHM,IAGA,CACLlB,UAAU,CAACgB,SAAX,CAAqBC,MAArB,CAA4B,WAA5B,EACAlB,UAAU,CAACiB,SAAX,CAAqBC,MAArB,CAA4B,WAA5B,EACD,CACF,CAXD,CAaA;AACAjB,UAAU,CAACyB,gBAAX,CAA4B,OAA5B,CAAqC,SAAAC,CAAC,CAAI,CACxC,GAAMb,CAAAA,YAAY,CAAGrB,KAAK,CAACE,aAAN,CAAoB,gBAApB,CAArB,CACA,GAAMiC,CAAAA,SAAS,CAAGd,YAAY,CAACe,sBAA/B,CACA,GAAMR,CAAAA,UAAU,CAAGnB,OAAO,CAACP,aAAR,CAAsB,gBAAtB,CAAnB,CACA,GAAMmC,CAAAA,OAAO,CAAGT,UAAU,CAACQ,sBAA3B,CACA,GAAML,CAAAA,WAAW,CAAG5B,MAAM,CAACmC,SAAP,CAAiB,SAAAvB,KAAK,QAAIA,CAAAA,KAAK,GAAKoB,SAAd,EAAtB,CAApB,CAEA;AACAf,WAAW,CAACpB,KAAD,CAAQqB,YAAR,CAAsBc,SAAtB,CAAX,CACA;AACAR,UAAU,CAACC,UAAD,CAAaS,OAAb,CAAV,CACA;AACAP,cAAc,CAAC3B,MAAD,CAAS4B,WAAT,CAAsBvB,UAAtB,CAAkCD,UAAlC,CAAd,CACD,CAbD,EAeA;AACAA,UAAU,CAAC0B,gBAAX,CAA4B,OAA5B,CAAqC,SAAAC,CAAC,CAAI,CACxC,GAAMb,CAAAA,YAAY,CAAGrB,KAAK,CAACE,aAAN,CAAoB,gBAApB,CAArB,CACA,GAAMqC,CAAAA,SAAS,CAAGlB,YAAY,CAACmB,kBAA/B,CACA,GAAMZ,CAAAA,UAAU,CAAGnB,OAAO,CAACP,aAAR,CAAsB,gBAAtB,CAAnB,CACA,GAAMuC,CAAAA,OAAO,CAAGb,UAAU,CAACY,kBAA3B,CACA,GAAMT,CAAAA,WAAW,CAAG5B,MAAM,CAACmC,SAAP,CAAiB,SAAAvB,KAAK,QAAIA,CAAAA,KAAK,GAAKwB,SAAd,EAAtB,CAApB,CAEA;AACAnB,WAAW,CAACpB,KAAD,CAAQqB,YAAR,CAAsBkB,SAAtB,CAAX,CACA;AACAZ,UAAU,CAACC,UAAD,CAAaa,OAAb,CAAV,CACA;AACAX,cAAc,CAAC3B,MAAD,CAAS4B,WAAT,CAAsBvB,UAAtB,CAAkCD,UAAlC,CAAd,CACD,CAbD,EAeA;AACAE,OAAO,CAACwB,gBAAR,CAAyB,OAAzB,CAAkC,SAAAC,CAAC,CAAI,CACrC;AACA,GAAML,CAAAA,SAAS,CAAGK,CAAC,CAACQ,MAAF,CAASC,OAAT,CAAiB,QAAjB,CAAlB,CACA;AACA,GAAG,CAACd,SAAJ,CAAe,OAAQ;AAEvB,GAAMR,CAAAA,YAAY,CAAGrB,KAAK,CAACE,aAAN,CAAoB,gBAApB,CAArB,CACA,GAAM0B,CAAAA,UAAU,CAAGnB,OAAO,CAACP,aAAR,CAAsB,gBAAtB,CAAnB,CACA,GAAM6B,CAAAA,WAAW,CAAGrB,IAAI,CAAC4B,SAAL,CAAe,SAAAM,GAAG,QAAIA,CAAAA,GAAG,GAAKf,SAAZ,EAAlB,CAApB,CACA,GAAMP,CAAAA,WAAW,CAAGnB,MAAM,CAAC4B,WAAD,CAA1B,CAEA;AACAX,WAAW,CAACpB,KAAD,CAAQqB,YAAR,CAAsBC,WAAtB,CAAX,CACA;AACAK,UAAU,CAACC,UAAD,CAAaC,SAAb,CAAV,CACA;AACAC,cAAc,CAAC3B,MAAD,CAAS4B,WAAT,CAAsBvB,UAAtB,CAAkCD,UAAlC,CAAd,CACD,CAjBD","sourcesContent":["const track = document.querySelector('.carousel__track');\nconst slides = Array.from(track.children);\nconst nextButton = document.querySelector('.carousel__button--right');\nconst prevButton = document.querySelector('.carousel__button--left');\nconst dotsNav = document.querySelector('.carousel__nav');\nconst dots = Array.from(dotsNav.children);\n\nconst slideWidth = slides[0].getBoundingClientRect().width;\n\n//---ALWAYS-----------------------------------------------------\n//Arrange the slides next to one another\nconst setSlidePosition = (slide, index) => {\n  slide.style.left = slideWidth * index + 'px';\n}\nslides.forEach(setSlidePosition);\n//Same as...\n// slides[0].style.left = slideWidth * 0 + \"px\";\n// slides[1].style.left = slideWidth * 1 + \"px\";...\n//^--ALWAYS-----------------------------------------------------\n\n\n//ftn change CSS to move slides\nconst moveToSlide = (track, currentSlide, targetSlide) => {\n  track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\n  currentSlide.classList.remove('current-slide');\n  targetSlide.classList.add('current-slide');\n}\n//ftn change CSS on dots to show current slide\nconst updateDots = (currentDot, targetDot) => {\n  currentDot.classList.remove('current-slide');\n  targetDot.classList.add('current-slide');\n}\n\n//ftn show which buttons to have active\nconst hideShowArrows = (slides, targetIndex, prevButton, nextButton) => {\n  if (targetIndex === 0) {\n    prevButton.classList.add('is-hidden');\n    nextButton.classList.remove('is-hidden');\n  } else if (targetIndex === slides.length - 1) {\n    prevButton.classList.remove('is-hidden');\n    nextButton.classList.add('is-hidden');\n  } else {\n    prevButton.classList.remove('is-hidden');\n    nextButton.classList.remove('is-hidden');\n  }\n}\n\n//When I click left, move slides to the left\nprevButton.addEventListener('click', e => {\n  const currentSlide = track.querySelector('.current-slide');\n  const prevSlide = currentSlide.previousElementSibling;\n  const currentDot = dotsNav.querySelector('.current-slide');\n  const prevDot = currentDot.previousElementSibling;\n  const targetIndex = slides.findIndex(slide => slide === prevSlide);\n\n  //Move to next slide\n  moveToSlide(track, currentSlide, prevSlide);\n  //Show which dot is now current\n  updateDots(currentDot, prevDot);\n  //Make scrolling buttons invisible when necessary\n  hideShowArrows(slides, targetIndex, prevButton, nextButton);\n})\n\n//When I click right, move slides to the right\nnextButton.addEventListener('click', e => {\n  const currentSlide = track.querySelector('.current-slide');\n  const nextSlide = currentSlide.nextElementSibling;\n  const currentDot = dotsNav.querySelector('.current-slide');\n  const nextDot = currentDot.nextElementSibling;\n  const targetIndex = slides.findIndex(slide => slide === nextSlide);\n\n  //Move to the next slide\n  moveToSlide(track, currentSlide, nextSlide);\n  //Show which dot is now current\n  updateDots(currentDot, nextDot);\n  //Make scrolling buttons invisible when necessary\n  hideShowArrows(slides, targetIndex, prevButton, nextButton);\n})\n\n//When I click the nav indicators, move to that slide\ndotsNav.addEventListener('click', e => {\n  //What indicator was clicked on?\n  const targetDot = e.target.closest('button');\n  //Stop running if we don't need anything to happen\n  if(!targetDot) return; //targetDot = null if click anywhere in dotsNav besides on dots\n\n  const currentSlide = track.querySelector('.current-slide');\n  const currentDot = dotsNav.querySelector('.current-slide');\n  const targetIndex = dots.findIndex(dot => dot === targetDot);\n  const targetSlide = slides[targetIndex];\n\n  //Move to target slide\n  moveToSlide(track, currentSlide, targetSlide);\n  //Show which dot is now current\n  updateDots(currentDot, targetDot);\n  //Make scrolling buttons invisible when necessary\n  hideShowArrows(slides, targetIndex, prevButton, nextButton);\n})"]},"metadata":{},"sourceType":"module"}