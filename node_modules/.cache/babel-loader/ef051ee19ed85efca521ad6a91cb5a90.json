{"ast":null,"code":"// const track = document.querySelector('.carousel__track');\n// const slides = Array.from(track.children);\n// const nextButton = document.querySelector('.carousel__button--right');\n// const prevButton = document.querySelector('.carousel__button--left');\n// const dotsNav = document.querySelector('.carousel__nav');\n// const dots = Array.from(dotsNav.children);\n// const slideWidth = slides[0].getBoundingClientRect().width;\n// //---ALWAYS-----------------------------------------------------\n// //Arrange the slides next to one another\n// const setSlidePosition = (slide, index) => {\n//   slide.style.left = slideWidth * index + 'px';\n// }\n// slides.forEach(setSlidePosition);\n// //Same as...\n// // slides[0].style.left = slideWidth * 0 + \"px\";\n// // slides[1].style.left = slideWidth * 1 + \"px\";...\n// //^--ALWAYS-----------------------------------------------------\n// //ftn change CSS to move slides\n// const moveToSlide = (track, currentSlide, targetSlide) => {\n//   track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\n//   currentSlide.classList.remove('current-slide');\n//   targetSlide.classList.add('current-slide');\n// }\n// //ftn change CSS on dots to show current slide\n// const updateDots = (currentDot, targetDot) => {\n//   currentDot.classList.remove('current-slide');\n//   targetDot.classList.add('current-slide');\n// }\n// //ftn show which buttons to have active\n// const hideShowArrows = (slides, targetIndex, prevButton, nextButton) => {\n//   if (targetIndex === 0) {\n//     prevButton.classList.add('is-hidden');\n//     nextButton.classList.remove('is-hidden');\n//   } else if (targetIndex === slides.length - 1) {\n//     prevButton.classList.remove('is-hidden');\n//     nextButton.classList.add('is-hidden');\n//   } else {\n//     prevButton.classList.remove('is-hidden');\n//     nextButton.classList.remove('is-hidden');\n//   }\n// }\n// //When I click left, move slides to the left\n// prevButton.addEventListener('click', e => {\n//   const currentSlide = track.querySelector('.current-slide');\n//   const prevSlide = currentSlide.previousElementSibling;\n//   const currentDot = dotsNav.querySelector('.current-slide');\n//   const prevDot = currentDot.previousElementSibling;\n//   const targetIndex = slides.findIndex(slide => slide === prevSlide);\n//   //Move to next slide\n//   moveToSlide(track, currentSlide, prevSlide);\n//   //Show which dot is now current\n//   updateDots(currentDot, prevDot);\n//   //Make scrolling buttons invisible when necessary\n//   hideShowArrows(slides, targetIndex, prevButton, nextButton);\n// })\n// //When I click right, move slides to the right\n// nextButton.addEventListener('click', e => {\n//   const currentSlide = track.querySelector('.current-slide');\n//   const nextSlide = currentSlide.nextElementSibling;\n//   const currentDot = dotsNav.querySelector('.current-slide');\n//   const nextDot = currentDot.nextElementSibling;\n//   const targetIndex = slides.findIndex(slide => slide === nextSlide);\n//   //Move to the next slide\n//   moveToSlide(track, currentSlide, nextSlide);\n//   //Show which dot is now current\n//   updateDots(currentDot, nextDot);\n//   //Make scrolling buttons invisible when necessary\n//   hideShowArrows(slides, targetIndex, prevButton, nextButton);\n// })\n// //When I click the nav indicators, move to that slide\n// dotsNav.addEventListener('click', e => {\n//   //What indicator was clicked on?\n//   const targetDot = e.target.closest('button');\n//   //Stop running if we don't need anything to happen\n//   if(!targetDot) return; //targetDot = null if click anywhere in dotsNav besides on dots\n//   const currentSlide = track.querySelector('.current-slide');\n//   const currentDot = dotsNav.querySelector('.current-slide');\n//   const targetIndex = dots.findIndex(dot => dot === targetDot);\n//   const targetSlide = slides[targetIndex];\n//   //Move to target slide\n//   moveToSlide(track, currentSlide, targetSlide);\n//   //Show which dot is now current\n//   updateDots(currentDot, targetDot);\n//   //Make scrolling buttons invisible when necessary\n//   hideShowArrows(slides, targetIndex, prevButton, nextButton);\n// })","map":{"version":3,"sources":["/Users/ebarw/Documents/job_stuff/portfolio/src/components/projects/Projects.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const track = document.querySelector('.carousel__track');\n// const slides = Array.from(track.children);\n// const nextButton = document.querySelector('.carousel__button--right');\n// const prevButton = document.querySelector('.carousel__button--left');\n// const dotsNav = document.querySelector('.carousel__nav');\n// const dots = Array.from(dotsNav.children);\n\n// const slideWidth = slides[0].getBoundingClientRect().width;\n\n// //---ALWAYS-----------------------------------------------------\n// //Arrange the slides next to one another\n// const setSlidePosition = (slide, index) => {\n//   slide.style.left = slideWidth * index + 'px';\n// }\n// slides.forEach(setSlidePosition);\n// //Same as...\n// // slides[0].style.left = slideWidth * 0 + \"px\";\n// // slides[1].style.left = slideWidth * 1 + \"px\";...\n// //^--ALWAYS-----------------------------------------------------\n\n\n// //ftn change CSS to move slides\n// const moveToSlide = (track, currentSlide, targetSlide) => {\n//   track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\n//   currentSlide.classList.remove('current-slide');\n//   targetSlide.classList.add('current-slide');\n// }\n// //ftn change CSS on dots to show current slide\n// const updateDots = (currentDot, targetDot) => {\n//   currentDot.classList.remove('current-slide');\n//   targetDot.classList.add('current-slide');\n// }\n\n// //ftn show which buttons to have active\n// const hideShowArrows = (slides, targetIndex, prevButton, nextButton) => {\n//   if (targetIndex === 0) {\n//     prevButton.classList.add('is-hidden');\n//     nextButton.classList.remove('is-hidden');\n//   } else if (targetIndex === slides.length - 1) {\n//     prevButton.classList.remove('is-hidden');\n//     nextButton.classList.add('is-hidden');\n//   } else {\n//     prevButton.classList.remove('is-hidden');\n//     nextButton.classList.remove('is-hidden');\n//   }\n// }\n\n// //When I click left, move slides to the left\n// prevButton.addEventListener('click', e => {\n//   const currentSlide = track.querySelector('.current-slide');\n//   const prevSlide = currentSlide.previousElementSibling;\n//   const currentDot = dotsNav.querySelector('.current-slide');\n//   const prevDot = currentDot.previousElementSibling;\n//   const targetIndex = slides.findIndex(slide => slide === prevSlide);\n\n//   //Move to next slide\n//   moveToSlide(track, currentSlide, prevSlide);\n//   //Show which dot is now current\n//   updateDots(currentDot, prevDot);\n//   //Make scrolling buttons invisible when necessary\n//   hideShowArrows(slides, targetIndex, prevButton, nextButton);\n// })\n\n// //When I click right, move slides to the right\n// nextButton.addEventListener('click', e => {\n//   const currentSlide = track.querySelector('.current-slide');\n//   const nextSlide = currentSlide.nextElementSibling;\n//   const currentDot = dotsNav.querySelector('.current-slide');\n//   const nextDot = currentDot.nextElementSibling;\n//   const targetIndex = slides.findIndex(slide => slide === nextSlide);\n\n//   //Move to the next slide\n//   moveToSlide(track, currentSlide, nextSlide);\n//   //Show which dot is now current\n//   updateDots(currentDot, nextDot);\n//   //Make scrolling buttons invisible when necessary\n//   hideShowArrows(slides, targetIndex, prevButton, nextButton);\n// })\n\n// //When I click the nav indicators, move to that slide\n// dotsNav.addEventListener('click', e => {\n//   //What indicator was clicked on?\n//   const targetDot = e.target.closest('button');\n//   //Stop running if we don't need anything to happen\n//   if(!targetDot) return; //targetDot = null if click anywhere in dotsNav besides on dots\n\n//   const currentSlide = track.querySelector('.current-slide');\n//   const currentDot = dotsNav.querySelector('.current-slide');\n//   const targetIndex = dots.findIndex(dot => dot === targetDot);\n//   const targetSlide = slides[targetIndex];\n\n//   //Move to target slide\n//   moveToSlide(track, currentSlide, targetSlide);\n//   //Show which dot is now current\n//   updateDots(currentDot, targetDot);\n//   //Make scrolling buttons invisible when necessary\n//   hideShowArrows(slides, targetIndex, prevButton, nextButton);\n// })"]},"metadata":{},"sourceType":"module"}